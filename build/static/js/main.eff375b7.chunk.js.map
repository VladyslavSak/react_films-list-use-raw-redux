{"version":3,"sources":["components/FilmCard/FilmCard.js","components/FilmsList/FilmsList.js","components/FormField/FormField.js","validation.js","components/NewFilm/NewFilm.js","data.js","components/FilmDetails/FilmDetails.js","App.js","index.js"],"names":["FilmCard","props","title","description","imgUrl","imdbUrl","id","react_default","a","createElement","react_router_dom","to","concat","className","src","alt","href","defaultProps","FilmsList","films","map","film","FilmCard_FilmCard_FilmCard","Object","assign","key","FormField","memo","error","name","label","type","onChange","placeholder","value","inputClass","cx","is-danger","controlClass","has-icons-right","Control","htmlFor","required","initialState","formValidators","NewFilm","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","handleChange","_ref","_ref$target","target","setState","prevState","defineProperty","handleSubmit","event","preventDefault","onAdd","formValue","getFormValue","_this$validate","validate","hasError","errors","newState","_ref3","_ref4","slicedToArray","fromEntries","inherits","createClass","entries","reduce","acc","entry","_objectSpread","_ref5","_ref6","fieldData","validator","some","errorData","_this$state","onSubmit","FormField_FormField","Component","FilmDetails","_this$props","API_URL","App","filmsList","searchWord","handleAddFilm","newFilm","toConsumableArray","App_objectSpread","handleSearchChange","searchFilm","fetch","then","response","json","data","Title","Plot","Poster","Website","imdbID","_this2","onClick","react_router","exact","path","render","FilmsList_FilmsList_FilmsList","_ref2","match","find","f","String","params","FilmDetails_FilmDetails","NewFilm_NewFilm","ReactDOM","App_App","document","getElementById"],"mappings":"8UAMaA,EAAW,SAACC,GAAU,IAE/BC,EAKED,EALFC,MACAC,EAIEF,EAJFE,YACAC,EAGEH,EAHFG,OACAC,EAEEJ,EAFFI,QACAC,EACEL,EADFK,GAGF,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAE,SAAAC,OAAWN,GAAMO,UAAU,QACjCN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAChBN,EAAAC,EAAAC,cAAA,OACEK,IAAKV,EACLW,IAAI,gBAIVR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,kBAChBN,EAAAC,EAAAC,cAAA,OACEK,IAAI,2EACJC,IAAI,WAIVR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,cAAcX,KAI/BK,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACZV,EACDI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGO,KAAMX,GAAT,YAeVL,EAASiB,aAAe,CACtBd,YAAa,ICtDR,IAAMe,EAAY,SAACjB,GAAU,IAC1BkB,EAAUlB,EAAVkB,MAER,OACEZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACZM,EAAMC,IAAI,SAAAC,GAAI,OACbd,EAAAC,EAAAC,cAACa,EAADC,OAAAC,OAAA,CAAUC,IAAKJ,EAAKf,IAAQe,QAepCH,EAAUD,aAAe,CACvBE,MAAO,iCCtBIO,SAAYC,eAAK,SAAC1B,GAAU,IAErC2B,EAOE3B,EAPF2B,MACAC,EAME5B,EANF4B,KACAC,EAKE7B,EALF6B,MACAC,EAIE9B,EAJF8B,KACAC,EAGE/B,EAHF+B,SACAC,EAEEhC,EAFFgC,YACAC,EACEjC,EADFiC,MAGIC,EAAaC,IAAG,QAAS,CAAEC,cAAeT,IAC1CU,EAAeF,IAAG,UAAW,CAAEG,oBAAqBX,IAEpDY,EAAmB,aAATT,EAAsBA,EAAO,QAE7C,OACExB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,SAAOgC,QAASZ,EAAMhB,UAAU,SAC7BiB,GAEHvB,EAAAC,EAAAC,cAAA,OAAKI,UAAWyB,GACd/B,EAAAC,EAAAC,cAAC+B,EAAD,CACEX,KAAMA,EACNvB,GAAIuB,EACJhB,UAAWsB,EACXJ,KAAMA,EACNE,YAAaA,EACbC,MAAOA,EACPF,SAAUA,IAEXJ,GACCrB,EAAAC,EAAAC,cAAA,QAAMI,UAAU,0BACdN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,kCAKlBe,GACCrB,EAAAC,EAAAC,cAAA,KAAGI,UAAU,kBAAkBe,OAgBvCF,EAAUT,aAAe,CACvBW,MAAO,GACPG,KAAM,OACNE,YAAa,kBC/DR,IAAMS,EAAW,SAACb,EAAMK,GAC7B,OAAOA,EACH,KADQ,SAAAtB,OAECiB,EAFD,6OCId,IAAMc,EAAe,CACnBzC,MAAO,CACLgC,MAAO,GACPN,MAAO,MAETzB,YAAa,CACX+B,MAAO,GACPN,MAAO,MAETxB,OAAQ,CACN8B,MAAO,GACPN,MAAO,MAETvB,QAAS,CACP6B,MAAO,GACPN,MAAO,OAILgB,EAAiB,CACrB1C,MAAOwC,EACPtC,OAAQsC,EACRrC,QAASqC,GAGEG,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAzB,OAAAkC,EAAA,EAAAlC,CAAA2B,MAAAH,EAAAxB,OAAAmC,EAAA,EAAAnC,CAAAsB,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAtC,OAAA0C,MACEO,MAAQlB,EADVK,EAWEc,aAAe,SAAAC,GAAiC,IAAAC,EAAAD,EAA9BE,OAAUpC,EAAoBmC,EAApBnC,KAAMK,EAAc8B,EAAd9B,MAChCc,EAAKkB,SAAS,SAAAC,GAAS,OAAA5C,OAAA6C,EAAA,EAAA7C,CAAA,GACpBM,EAAO,CACNK,QACAN,MAAOuC,EAAUtC,GAAMD,WAf/BoB,EAoBEqB,aAAe,SAACC,GACdA,EAAMC,iBADkB,IAGhBC,EAAUxB,EAAK/C,MAAfuE,MACFC,EAAYzB,EAAK0B,eAJCC,EAMK3B,EAAK4B,WAA1BC,EANgBF,EAMhBE,SAAUC,EANMH,EAMNG,OAEdD,EACF7B,EAAKkB,SAAS,SAACC,GACb,IAAMY,EAAWD,EAAO1D,IAAI,SAAA4D,GAAmB,IAAAC,EAAA1D,OAAA2D,EAAA,EAAA3D,CAAAyD,EAAA,GAAjBnD,EAAiBoD,EAAA,GAC7C,MAAO,CACLpD,EACA,CACED,MAJyCqD,EAAA,GAKzC/C,MAAOiC,EAAUtC,GAAMK,UAK7B,OAAOX,OAAO4D,YAAYJ,MAG5B/B,EAAKkB,SAASvB,GACd6B,EAAMC,KA5CZzB,EAAA,OAAAzB,OAAA6D,EAAA,EAAA7D,CAAAsB,EAAAC,GAAAvB,OAAA8D,EAAA,EAAA9D,CAAAsB,EAAA,EAAApB,IAAA,eAAAS,MAAA,WAII,OAAOX,OAAO+D,QAAQpC,KAAKW,OACxB0B,OAAO,SAACC,EAAKC,GAAN,4VAAAC,CAAA,GACHF,EADGjE,OAAA6C,EAAA,EAAA7C,CAAA,GAELkE,EAAM,GAAKA,EAAM,GAAGvD,SACnB,MARV,CAAAT,IAAA,WAAAS,MAAA,WAiDI,IAAM4C,EAASvD,OAAO+D,QAAQpC,KAAKW,OAChCzC,IAAI,SAAAuE,GAAuB,IAAAC,EAAArE,OAAA2D,EAAA,EAAA3D,CAAAoE,EAAA,GAArB9D,EAAqB+D,EAAA,GAAfC,EAAeD,EAAA,GACpBE,EAAYlD,EAAef,GAKjC,MAAO,CAACA,EAJMiE,EACVA,EAAUjE,EAAMgE,EAAU3D,OAC1B,QAQR,MAAO,CACL2C,SAJeC,EACdiB,KAAK,SAAAC,GAAS,QAAMA,EAAU,KAI/BlB,YAhEN,CAAArD,IAAA,SAAAS,MAAA,WAoEW,IAAA+D,EAMH/C,KAAKW,MAJP3D,EAFK+F,EAEL/F,MACAC,EAHK8F,EAGL9F,YACAC,EAJK6F,EAIL7F,OACAC,EALK4F,EAKL5F,QAGF,OACEE,EAAAC,EAAAC,cAAA,QAAMyF,SAAUhD,KAAKmB,cACnB9D,EAAAC,EAAAC,cAAC0F,EAAD5E,OAAAC,OAAA,GACMtB,EADN,CAEE2B,KAAK,QACLI,YAAY,mBACZH,MAAM,QACNE,SAAUkB,KAAKY,gBAEjBvD,EAAAC,EAAAC,cAAC0F,EAAD5E,OAAAC,OAAA,GACMrB,EADN,CAEE4B,KAAK,WACLF,KAAK,cACLI,YAAY,yBACZH,MAAM,cACNE,SAAUkB,KAAKY,gBAEjBvD,EAAAC,EAAAC,cAAC0F,EAAD5E,OAAAC,OAAA,GACMpB,EADN,CAEEyB,KAAK,SACLI,YAAY,kBACZH,MAAM,YACNE,SAAUkB,KAAKY,gBAEjBvD,EAAAC,EAAAC,cAAC0F,EAAD5E,OAAAC,OAAA,GACMnB,EADN,CAEEwB,KAAK,UACLI,YAAY,iBACZH,MAAM,WACNE,SAAUkB,KAAKY,gBAGjBvD,EAAAC,EAAAC,cAAA,UACEsB,KAAK,SACLlB,UAAU,qBAFZ,iBA5GRgC,EAAA,CAA6BuD,aC7BhBjF,EAAQ,CAAC,CACpBb,GAAI,EACJJ,MAAO,gBACPC,YAAa,mFACbC,OAAQ,yJACRC,QAAS,iDCFEgG,EAAb,SAAAvD,GAAA,SAAAuD,IAAA,OAAA9E,OAAA0B,EAAA,EAAA1B,CAAA2B,KAAAmD,GAAA9E,OAAAkC,EAAA,EAAAlC,CAAA2B,KAAA3B,OAAAmC,EAAA,EAAAnC,CAAA8E,GAAAzC,MAAAV,KAAAE,YAAA,OAAA7B,OAAA6D,EAAA,EAAA7D,CAAA8E,EAAAvD,GAAAvB,OAAA8D,EAAA,EAAA9D,CAAA8E,EAAA,EAAA5E,IAAA,SAAAS,MAAA,WACW,IAAAoE,EAMHpD,KAAKjD,MAJPC,EAFKoG,EAELpG,MACAC,EAHKmG,EAGLnG,YACAC,EAJKkG,EAILlG,OACAC,EALKiG,EAKLjG,QAGF,OACEE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAChBN,EAAAC,EAAAC,cAAA,OACEK,IAAKV,EACLW,IAAI,gBAIVR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,kBAChBN,EAAAC,EAAAC,cAAA,OACEK,IAAI,2EACJC,IAAI,WAIVR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,cAAcX,KAI/BK,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACZV,EACDI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGO,KAAMX,GAAT,eArCZgG,EAAA,CAAiCD,gkBAoDjCC,EAAYpF,aAAe,CACzBd,YAAa,IC5Cf,IAAMoG,EAAU,6CAEHC,EAAb,SAAA1D,GAAA,SAAA0D,IAAA,IAAAzD,EAAAC,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,KAAAsD,GAAA,QAAArD,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAzB,OAAAkC,EAAA,EAAAlC,CAAA2B,MAAAH,EAAAxB,OAAAmC,EAAA,EAAAnC,CAAAiF,IAAA7C,KAAAC,MAAAb,EAAA,CAAAG,MAAAtC,OAAA0C,MACEO,MAAQ,CACN4C,UAAWtF,EACXuF,WAAY,IAHhB1D,EAUE2D,cAAgB,SAACC,GACf5D,EAAKkB,SAAS,SAAAC,GAAS,MAAK,CAC1BsC,UAAS,GAAA7F,OAAAW,OAAAsF,EAAA,EAAAtF,CACJ4C,EAAUsC,WADN,CAAAK,EAAA,CAGLxG,GAAI6D,EAAUsC,UAAUtC,EAAUsC,UAAUpD,OAAS,GAAG/C,GAAK,GAC1DsG,SAhBb5D,EAsBE+D,mBAAqB,SAAAhD,GAAgB,IAAbE,EAAaF,EAAbE,OACtBjB,EAAKkB,SAAS,CAAEwC,WAAYzC,EAAO/B,SAvBvCc,EA0BEgE,WAAa,SAACN,GACZO,MAAK,GAAArG,OAAI2F,GAAJ3F,OAAc8F,IAChBQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAACG,GAAS,IAEZC,EAKED,EALFC,MACAC,EAIEF,EAJFE,KACAC,EAGEH,EAHFG,OACAC,EAEEJ,EAFFI,QAIIb,EAAU,CACdtG,GAHE+G,EADFK,OAKAxH,MAAOoH,EACPnH,YAAaoH,EACbnH,OAAQoH,EACRnH,QAASoH,GAGXzE,EAAKkB,SAAS,SAAAC,GAAS,MAAK,CAC1BsC,UAAS,GAAA7F,OAAAW,OAAAsF,EAAA,EAAAtF,CAAM4C,EAAUsC,WAAhB,CAA2BG,UA/C9C5D,EAAA,OAAAzB,OAAA6D,EAAA,EAAA7D,CAAAiF,EAAA1D,GAAAvB,OAAA8D,EAAA,EAAA9D,CAAAiF,EAAA,EAAA/E,IAAA,oBAAAS,MAAA,WAOIgB,KAAK8D,WAAW,YAPpB,CAAAvF,IAAA,SAAAS,MAAA,WAoDW,IAAAyF,EAAAzE,KAAA+C,EAC2B/C,KAAKW,MAA/B4C,EADDR,EACCQ,UAAWC,EADZT,EACYS,WAEnB,OACEnG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAC0F,EAAD,CACEjE,MAAOwE,EACP7E,KAAK,aACLI,YAAY,mBACZH,MAAM,cACNE,SAAUkB,KAAK6D,qBAEjBxG,EAAAC,EAAAC,cAAA,UACEmH,QAAS,kBAAMD,EAAKX,WAAWN,IAC/B3E,KAAK,SACLlB,UAAU,qBAHZ,gBASFN,EAAAC,EAAAC,cAACoH,EAAA,EAAD,KACEtH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,kBACNzH,EAAAC,EAAAC,cAACwH,EAAD,CAAW9G,MAAOsF,OAGtBlG,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,YACLC,OAAQ,SAAAE,GAAe,IAAZC,EAAYD,EAAZC,MACH9G,EAAOoF,EACV2B,KAAK,SAAAC,GAAC,OAAIC,OAAOD,EAAE/H,MAAQ6H,EAAMI,OAAOjI,KAE3C,OACEC,EAAAC,EAAAC,cAAC+H,EAAgBnH,QAM3Bd,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACbN,EAAAC,EAAAC,cAACgI,EAAD,CAASjE,MAAOtB,KAAKyD,uBAnGjCH,EAAA,CAAyBJ,mBCVzBsC,IAASV,OAAOzH,EAAAC,EAAAC,cAACkI,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.eff375b7.chunk.js","sourcesContent":["/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FilmCard.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const FilmCard = (props) => {\r\n  const {\r\n    title,\r\n    description,\r\n    imgUrl,\r\n    imdbUrl,\r\n    id,\r\n  } = props;\r\n\r\n  return (\r\n    <Link to={`/film/${id}`} className=\"card\">\r\n      <div className=\"card-image\">\r\n        <figure className=\"image is-4by3\">\r\n          <img\r\n            src={imgUrl}\r\n            alt=\"Film logo\"\r\n          />\r\n        </figure>\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <div className=\"media\">\r\n          <div className=\"media-left\">\r\n            <figure className=\"image is-48x48\">\r\n              <img\r\n                src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\r\n                alt=\"imdb\"\r\n              />\r\n            </figure>\r\n          </div>\r\n          <div className=\"media-content\">\r\n            <p className=\"title is-4\">{title}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          {description}\r\n          <br />\r\n          <a href={imdbUrl}>IMDB</a>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nFilmCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nFilmCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FilmsList.scss';\r\nimport { FilmCard } from '../FilmCard';\r\n\r\nexport const FilmsList = (props) => {\r\n  const { films } = props;\r\n\r\n  return (\r\n    <div className=\"films\">\r\n      {films.map(film => (\r\n        <FilmCard key={film.id} {...film} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFilmsList.propTypes = {\r\n  films: PropTypes.arrayOf(PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    description: PropTypes.string,\r\n    imgUrl: PropTypes.string.isRequired,\r\n    imdbUrl: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nFilmsList.defaultProps = {\r\n  films: [],\r\n};\r\n","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'classnames';\r\nimport './FormField.scss';\r\n\r\nexport const FormField = memo((props) => {\r\n  const {\r\n    error,\r\n    name,\r\n    label,\r\n    type,\r\n    onChange,\r\n    placeholder,\r\n    value,\r\n  } = props;\r\n\r\n  const inputClass = cx('input', { 'is-danger': !!error });\r\n  const controlClass = cx('control', { 'has-icons-right': !!error });\r\n\r\n  const Control = type === 'textarea' ? type : 'input';\r\n\r\n  return (\r\n    <div className=\"field\">\r\n      <label htmlFor={name} className=\"label\">\r\n        {label}\r\n      </label>\r\n      <div className={controlClass}>\r\n        <Control\r\n          name={name}\r\n          id={name}\r\n          className={inputClass}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n        {error && (\r\n          <span className=\"icon is-small is-right\">\r\n            <i className=\"fas fa-exclamation-triangle\" />\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      {error && (\r\n        <p className=\"help is-danger\">{error}</p>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nFormField.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  error: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nFormField.defaultProps = {\r\n  error: '',\r\n  type: 'text',\r\n  placeholder: 'Type text here',\r\n};\r\n","export const required = (name, value) => {\r\n  return value\r\n    ? null\r\n    : `Field ${name} is required`;\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormField } from '../FormField';\r\nimport { required } from '../../validation';\r\n\r\nconst initialState = {\r\n  title: {\r\n    value: '',\r\n    error: null,\r\n  },\r\n  description: {\r\n    value: '',\r\n    error: null,\r\n  },\r\n  imgUrl: {\r\n    value: '',\r\n    error: null,\r\n  },\r\n  imdbUrl: {\r\n    value: '',\r\n    error: null,\r\n  },\r\n};\r\n\r\nconst formValidators = {\r\n  title: required,\r\n  imgUrl: required,\r\n  imdbUrl: required,\r\n};\r\n\r\nexport class NewFilm extends Component {\r\n  state = initialState;\r\n\r\n  getFormValue() {\r\n    return Object.entries(this.state)\r\n      .reduce((acc, entry) => ({\r\n        ...acc,\r\n        [entry[0]]: entry[1].value,\r\n      }), {});\r\n  }\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState(prevState => ({\r\n      [name]: {\r\n        value,\r\n        error: prevState[name].error,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { onAdd } = this.props;\r\n    const formValue = this.getFormValue();\r\n\r\n    const { hasError, errors } = this.validate();\r\n\r\n    if (hasError) {\r\n      this.setState((prevState) => {\r\n        const newState = errors.map(([name, error]) => {\r\n          return [\r\n            name,\r\n            {\r\n              error,\r\n              value: prevState[name].value,\r\n            },\r\n          ];\r\n        });\r\n\r\n        return Object.fromEntries(newState);\r\n      });\r\n    } else {\r\n      this.setState(initialState);\r\n      onAdd(formValue);\r\n    }\r\n  };\r\n\r\n  validate() {\r\n    const errors = Object.entries(this.state)\r\n      .map(([name, fieldData]) => {\r\n        const validator = formValidators[name];\r\n        const error = validator\r\n          ? validator(name, fieldData.value)\r\n          : null;\r\n\r\n        return [name, error];\r\n      });\r\n\r\n    const hasError = errors\r\n      .some(errorData => !!errorData[1]);\r\n\r\n    return {\r\n      hasError,\r\n      errors,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      description,\r\n      imgUrl,\r\n      imdbUrl,\r\n    } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <FormField\r\n          {...title}\r\n          name=\"title\"\r\n          placeholder=\"Input film title\"\r\n          label=\"Title\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <FormField\r\n          {...description}\r\n          type=\"textarea\"\r\n          name=\"description\"\r\n          placeholder=\"Input film description\"\r\n          label=\"Description\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <FormField\r\n          {...imgUrl}\r\n          name=\"imgUrl\"\r\n          placeholder=\"Paste image url\"\r\n          label=\"Image url\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <FormField\r\n          {...imdbUrl}\r\n          name=\"imdbUrl\"\r\n          placeholder=\"Paste IMDB url\"\r\n          label=\"IMDB url\"\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button is-primary\"\r\n        >\r\n          Add film\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nNewFilm.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\n","/* eslint-disable max-len */\r\nexport const films = [{\r\n  id: 1,\r\n  title: 'Groundhog Day',\r\n  description: 'A weatherman finds himself inexplicably living the same day over and over again.',\r\n  imgUrl: 'https://m.media-amazon.com/images/M/MV5BZWIxNzM5YzQtY2FmMS00Yjc3LWI1ZjUtNGVjMjMzZTIxZTIxXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SY1000_CR0,0,671,1000_AL_.jpg',\r\n  imdbUrl: 'https://www.imdb.com/title/tt0107048/',\r\n}];\r\n","/* eslint-disable max-len */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class FilmDetails extends Component {\r\n  render() {\r\n    const {\r\n      title,\r\n      description,\r\n      imgUrl,\r\n      imdbUrl,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-image\">\r\n          <figure className=\"image is-4by3\">\r\n            <img\r\n              src={imgUrl}\r\n              alt=\"Film logo\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"media\">\r\n            <div className=\"media-left\">\r\n              <figure className=\"image is-48x48\">\r\n                <img\r\n                  src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\r\n                  alt=\"imdb\"\r\n                />\r\n              </figure>\r\n            </div>\r\n            <div className=\"media-content\">\r\n              <p className=\"title is-4\">{title}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"content\">\r\n            {description}\r\n            <br />\r\n            <a href={imdbUrl}>IMDB</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilmDetails.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nFilmDetails.defaultProps = {\r\n  description: '',\r\n};\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport { FilmsList } from './components/FilmsList';\r\nimport { NewFilm } from './components/NewFilm';\r\nimport { films } from './data';\r\nimport { FormField } from './components/FormField';\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport { FilmDetails } from './components/FilmDetails';\r\n\r\nconst API_URL = 'http://www.omdbapi.com/?apikey=2f4a38c9&t=';\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    filmsList: films,\r\n    searchWord: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.searchFilm('spider');\r\n  }\r\n\r\n  handleAddFilm = (newFilm) => {\r\n    this.setState(prevState => ({\r\n      filmsList: [\r\n        ...prevState.filmsList,\r\n        {\r\n          id: prevState.filmsList[prevState.filmsList.length - 1].id + 1,\r\n          ...newFilm,\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  handleSearchChange = ({ target }) => {\r\n    this.setState({ searchWord: target.value });\r\n  };\r\n\r\n  searchFilm = (searchWord) => {\r\n    fetch(`${API_URL}${searchWord}`)\r\n      .then(response => response.json())\r\n      .then((data) => {\r\n        const {\r\n          Title,\r\n          Plot,\r\n          Poster,\r\n          Website,\r\n          imdbID,\r\n        } = data;\r\n\r\n        const newFilm = {\r\n          id: imdbID,\r\n          title: Title,\r\n          description: Plot,\r\n          imgUrl: Poster,\r\n          imdbUrl: Website,\r\n        };\r\n\r\n        this.setState(prevState => ({\r\n          filmsList: [...prevState.filmsList, newFilm],\r\n        }));\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { filmsList, searchWord } = this.state;\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"page\">\r\n          <div className=\"content\">\r\n            <div className=\"box\">\r\n              <FormField\r\n                value={searchWord}\r\n                name=\"searchWord\"\r\n                placeholder=\"Type search word\"\r\n                label=\"Search film\"\r\n                onChange={this.handleSearchChange}\r\n              />\r\n              <button\r\n                onClick={() => this.searchFilm(searchWord)}\r\n                type=\"button\"\r\n                className=\"button is-primary\"\r\n              >\r\n                Search film\r\n              </button>\r\n            </div>\r\n\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={() => (\r\n                  <FilmsList films={filmsList} />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/film/:id\"\r\n                render={({ match }) => {\r\n                  const film = filmsList\r\n                    .find(f => String(f.id) === match.params.id);\r\n\r\n                  return (\r\n                    <FilmDetails {...film} />\r\n                  );\r\n                }}\r\n              />\r\n            </Switch>\r\n          </div>\r\n          <div className=\"sidebar\">\r\n            <NewFilm onAdd={this.handleAddFilm} />\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport 'bulma/css/bulma.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}